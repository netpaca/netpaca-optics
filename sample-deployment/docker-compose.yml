# -----------------------------------------------------------------------------
# Netpaca Optic Monitoring
#
# This docker-compose file is used to manage the containers responsible for the
# interface optics monitoring service.  This includes the following:
#
#   - Grafana for visualization
#   - InfluxDB for TSDB
#   - multiple collector containers that are used to monitor slices
#     of the network inventory
# -----------------------------------------------------------------------------

version: '3.7'

# -----------------------------------------------------------------------------
# Define the common set of netpaca container options that will be reused for
# each of the inventory slices; requires docker-compose version 3.7
# -----------------------------------------------------------------------------

x-netpaca:
  &default-netpaca
  image: netpaca-optics:0.1.0

  # we're going to enable debug logging by default, so we want to cap
  # the filesystem resources used

  logging:
    options:
      max-size: "10m"
      max-file: "3"

  # connect the container to the shared docker network so the exporter
  # configurations will get the metrics to the influxdb container

  networks:
    netpaca-health-monitoring:

  volumes:
    - $PWD/netpaca.toml:/etc/netpaca/netpaca.toml
    - $PWD/inventory.csv:/etc/netpaca/inventory.csv

  # the following variables are using _inside_ the container by the the
  # netpaca.toml configuation file

  environment:
    INVENTORY_CSV: /etc/netpaca/inventory.csv
    INFLUXDB_SERVER: http://influxdb:8086

  # pass the container environment variables that contain the device login
  # credentials so that the values used in the netpaca.toml file exists and can
  # be used.

  env_file:
    - $PWD/credentials.env

# -----------------------------------------------------------------------------
#
#                            Grafana and InfluxDB Services
#
# -----------------------------------------------------------------------------

services:
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
       - 3000:3000
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    user: "0"   # needed for volume mounting
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      netpaca-health-monitoring:

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081:8081
    networks:
      netpaca-health-monitoring:

  influxdb:
    image: influxdb
    ports:
      - 8086:8086
    volumes:
      - $PWD:/var/lib/influxdb
    networks:
      netpaca-health-monitoring:

# -----------------------------------------------------------------------------
#
#                     Monitoring Services for slices of inventory
#
# -----------------------------------------------------------------------------

#  optics-core:
#    << : *default-netpaca
#    command: >
#      netpaca
#      -C /etc/netpaca/netpaca.toml
#      --limit role=core
#      --log-level debug
#
#  optics-noncore:
#    << : *default-netpaca
#    command: >
#      netpaca
#      -C /etc/netpaca/netpaca.toml
#      --exclude role=core
#      --log-level debug

  optics-all:
    << : *default-netpaca
    command: >
      netpaca
      -C /etc/netpaca/netpaca.toml
      --log-level debug

# -----------------------------------------------------------------------------
#
#                                  Networks
#
# -----------------------------------------------------------------------------

networks:
  netpaca-health-monitoring:
    # use an explicit name so that you can use this network with other
    # docker-compose based health monitoring systems.  If you do not
    # set the name explicitly, then the name will be mangled with
    # the docker-compose project name (undesired)
    name: "netpaca-health-monitoring"
